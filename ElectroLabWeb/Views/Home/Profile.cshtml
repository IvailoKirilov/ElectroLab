@using Microsoft.AspNetCore.Identity
@using ElectroLabModels.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model ApplicationUser
@{
    ViewData["Title"] = "Profile";
}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.1/font/bootstrap-icons.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">
</head>

<style>
    :root {
        --primary-color: #3498db;
        --secondary-color: #2ecc71;
        --danger-color: #e74c3c;
        --text-color: #2c3e50;
        --light-bg: #f8f9fa;
        --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background-color: var(--light-bg);
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        color: var(--text-color);
        line-height: 1.6;
    }

    .container {
        width: 90%;
        max-width: 1200px;
        margin: 0 auto;
        padding: 30px 15px;
        flex-grow: 1;
    }

    .page-header {
        margin-bottom: 30px;
        border-bottom: 2px solid var(--primary-color);
        padding-bottom: 15px;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 0;
    }

    .profile-section {
        display: flex;
        flex-wrap: wrap;
        gap: 30px;
        margin-bottom: 40px;
    }

    .profile-card {
        flex: 1;
        min-width: 300px;
        background-color: white;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .profile-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        background-color: var(--primary-color);
        color: white;
        padding: 20px 25px;
        font-size: 1.5rem;
        font-weight: 500;
    }

    .card-body {
        padding: 25px;
    }

    .profile-detail {
        margin-bottom: 15px;
    }

    .profile-detail-label {
        font-weight: 600;
        color: var(--primary-color);
    }

    .profile-detail-value {
        font-size: 1.1rem;
    }

    .role-badges {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-top: 15px;
    }

    .badge {
        padding: 8px 15px;
        border-radius: 30px;
        font-size: 0.9rem;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 6px;
    }

    .badge-owner {
        background-color: var(--danger-color);
        color: white;
    }

    .badge-admin {
        background-color: var(--primary-color);
        color: white;
    }

    .section-divider {
        height: 3px;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        margin: 40px 0;
        border-radius: 3px;
    }

    .section-title {
        font-size: 1.8rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .activity-summary {
        background-color: white;
        padding: 20px;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
        margin-bottom: 25px;
    }

    .activity-stat {
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .activity-stat i {
        color: var(--primary-color);
        font-size: 1.3rem;
    }

    .courses-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: var(--card-shadow);
        margin-top: 20px;
    }

    .courses-table th {
        background: linear-gradient(135deg, var(--primary-color), #2980b9);
        color: white;
        padding: 15px;
        text-align: left;
        font-weight: 500;
    }

    .courses-table td {
        padding: 15px;
        border-bottom: 1px solid #ecf0f1;
    }

    .courses-table tr:last-child td {
        border-bottom: none;
    }

    .courses-table tr:nth-child(even) {
        background-color: rgba(236, 240, 241, 0.5);
    }

    .courses-table tr:hover {
        background-color: rgba(52, 152, 219, 0.05);
    }

    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 10px 15px;
        border-radius: 6px;
        font-size: 0.9rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        border: none;
    }

    .btn-view {
        background-color: var(--primary-color);
        color: white;
    }

    .btn-view:hover {
        background-color: #2980b9;
    }

    .btn-remove {
        background-color: var(--danger-color);
        color: white;
    }

    .btn-remove:hover {
        background-color: #c0392b;
    }

    .action-column {
        display: flex;
        gap: 10px;
    }

    .empty-state {
        text-align: center;
        padding: 40px 20px;
        background-color: white;
        border-radius: 12px;
        box-shadow: var(--card-shadow);
    }

    .empty-state i {
        font-size: 3rem;
        color: #bdc3c7;
        margin-bottom: 15px;
    }

    .empty-state p {
        font-size: 1.1rem;
        color: #7f8c8d;
    }

    /* Responsive Adjustments */
    @@ media (max-width: 768px) {
        .container {
            width: 95%;
            padding: 20px 10px;
        }
        
        .profile-section {
            flex-direction: column;
        }
        
        .action-column {
            flex-direction: column;
            gap: 8px;
        }
        
        .page-title {
            font-size: 2rem;
        }
    }
</style>

<div class="container animate__animated animate__fadeIn">
    <div class="page-header">
        <h1 class="page-title">@Localizer["UserProfile"]</h1>
    </div>

    <div class="profile-section">
        <div class="profile-card animate__animated animate__fadeInUp">
            <div class="card-header">
                <i class="bi bi-person-circle"></i> @Model?.UserName
            </div>
            <div class="card-body">
                @if (Model != null)
                {
                    <div class="profile-detail">
                        <span class="profile-detail-label"><i class="bi bi-envelope"></i> @Localizer["Email"]: </span>
                        <span class="profile-detail-value">@Model.Email</span>
                    </div>
                    <div class="profile-detail">
                        <span class="profile-detail-label"><i class="bi bi-fingerprint"></i> @Localizer["UserId"]: </span>
                        <span class="profile-detail-value">@Model.Id</span>
                    </div>
                    <div class="profile-detail">
                        <h4 class="profile-detail-label"><i class="bi bi-shield-check"></i> @Localizer["Roles"]</h4>
                        <div class="role-badges">
                            @if (await UserManager.GetRolesAsync(Model) != null)
                            {
                                var roles = await UserManager.GetRolesAsync(Model);
                                if (roles != null && roles.Any())
                                {
                                    foreach (var role in roles)
                                    {
                                        @if (role == "Owner")
                                        {
                                            <span class="badge badge-owner"><i class="bi bi-star-fill"></i> @Localizer["Owner"]</span>
                                        }
                                        else if (role == "Admin")
                                        {
                                            <span class="badge badge-admin"><i class="bi bi-shield-lock"></i> @Localizer["Admin"]</span>
                                        }
                                    }
                                }
                                else
                                {
                                    <p>@Localizer["NoRolesAssigned"]</p>
                                }
                            }
                            else
                            {
                                <p>@Localizer["NoRolesFound"]</p>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="empty-state">
                        <i class="bi bi-exclamation-circle"></i>
                        <p>@Localizer["UserDataNotFound"]</p>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="section-divider"></div>

    <div class="section-title animate__animated animate__fadeInUp">
        <i class="bi bi-bar-chart"></i> @Localizer["Activity"]
    </div>

    <div class="activity-summary animate__animated animate__fadeInUp" style="animation-delay: 0.1s">
        @if (Model?.Courses != null && Model.Courses.Any())
        {
            <div class="activity-stat">
                <i class="bi bi-journal-check"></i>
                <strong>@Localizer["CoursesMade"]:</strong> @Model.Courses.Count
            </div>
        }
        else
        {
            <div class="activity-stat">
                <i class="bi bi-journal-x"></i>
                <span>@Localizer["NoCourses"]</span>
            </div>
        }
    </div>

    <div class="section-title animate__animated animate__fadeInUp" style="animation-delay: 0.2s">
        <i class="bi bi-collection"></i> @Localizer["Published"] @Model?.UserName
    </div>

    @if (Model?.Courses != null && Model.Courses.Any())
    {
        <table class="courses-table animate__animated animate__fadeInUp" style="animation-delay: 0.3s">
            <thead>
                <tr>
                    <th><i class="bi bi-justify"></i> @Localizer["Name"]</th>
                    <th><i class="bi bi-card-text"></i> @Localizer["Description"]</th>
                    <th><i class="bi bi-gear"></i> @Localizer["Action"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var file in Model.Courses)
                {
                    <tr>
                        <td>@file.Title</td>
                        <td>@file.Description</td>
                        <td class="action-column">
                            <a asp-controller="Course" asp-action="Details" asp-route-id="@file.Id" class="btn btn-view" title="View Details">
                                <i class="bi bi-eye"></i> @Localizer["View"]
                            </a>

                            @if (User.IsInRole("Admin") || User.IsInRole("Owner"))
                            {
                                <a asp-controller="Course" asp-action="Delete" asp-route-id="@file.Id" class="btn btn-remove" title="Remove Course">
                                    <i class="bi bi-x-circle"></i> @Localizer["Remove"]
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="empty-state animate__animated animate__fadeInUp" style="animation-delay: 0.3s">
            <i class="bi bi-journal-x"></i>
            <p>No courses available to display.</p>
        </div>
    }
</div>